---

# This role deploys the mongod processes and sets up the replication set.

- name: Add the OS specific varibles
  include_vars: "{{ ansible_os_family }}.yml"

- name: Install the apt key for ubuntu
  apt_key: id=7F0CEB10 url="http://docs.mongodb.org/10gen-gpg-key.asc"
  when: ansible_os_family == "Debian"

- name: Install the python pycurl library
  apt: name=python-pycurl state=installed update_cache=yes
  when: ansible_os_family == "Debian"

- name: Install the repository for Ubuntu mongodb
  apt_repository: repo="deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen" state=present
  when: ansible_os_family == "Debian"
  
- name: Install the libselinux module
  yum: name=libselinux-python state=installed
  when: ansible_os_family == "RedHat"

- name: Create the repository for mongo-org-3.2
  copy: src=mongodb-org-3.2.repo dest=/etc/yum.repos.d/mongodb-org-3.2.repo
  when: ansible_os_family == "RedHat"

- name: Create the EPEL Repository.
  copy: src=epel.repo dest=/etc/yum.repos.d/epel.repo
  when: ansible_os_family == "RedHat"

- name: Create the mongod user
  user: name={{ mongo_user }} comment="MongoD"

- name: make sure the hostname is available in /etc/hosts
  lineinfile: dest=/etc/hosts regexp="{{ ansible_hostname }}" line="{{ hostvars[inventory_hostname].ansible_default_ipv4.address + ' ' + ansible_hostname }}" state=present

- name: Create the data directory for the mongod
  file: path={{ mongod_datadir_prefix }} owner={{ mongo_user }} group={{ mongo_group }} state=directory

- name: Install the mongodb package
  yum: name={{ item }} state=installed
  with_items: mongod_pkgs
  when: ansible_os_family == "RedHat"

- name: Install the mongodb package
  apt: name={{ item }} state=installed update_cache=yes
  with_items: mongod_pkgs
  when: ansible_os_family == "Debian"

